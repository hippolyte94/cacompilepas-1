{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/App/App.tsx\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from '../Navigation/Nav';\nimport LobbyPage from '../Lobby/LobbyPage';\nimport Connection from '../Connection/Connection';\nimport NotFound from '../Pages/NotFound';\nimport PrivateRoute from '../../Security/PrivateRoute';\nimport '../../css/App.css';\nimport Home from '../Pages/Home';\nimport Admin from '../Admin/Admin';\nimport PublicLobbies from '../Public/PublicLobbies';\nimport CourseSheetPage from '../CourseSheet/CourseSheetPage';\nimport Personal from '../Pages/Personal';\nimport LobbyCreation from '../Lobby/LobbyCreation';\nimport Inscription from '../Connection/Inscription';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.map = void 0;\n    this.state = {\n      items: []\n    };\n    this.map = {\n      '/lobby': 'Lobby',\n      '/perso': 'Perso',\n      '/admin': 'Admin',\n      '/connexion/register': 'Inscription',\n      '/connexion/connexion': 'Connexion',\n      '/': 'Accueil'\n    };\n  }\n\n  componentWillMount() {\n    /*\n    // Breadcumbs logic\n    // let firstBre =\n    let breadcumbIndex = 0;\n    let breadcrums: any = [];\n    for (let item in localStorage) {\n        if ('breadcrumb-' === item.substr(0, 11)) {\n            breadcrums.push({key: item, value: localStorage.getItem(item)});\n         }\n        if ('breadcrumb-' + breadcumbIndex === item) {\n             if (deleteOthers) {\n                localStorage.removeItem('breadcumb-' + breadcumbIndex);\n            } else if (localStorage.getItem('breadcumb-' + (breadcumbIndex - 1)) === document.location.pathname + localStorage.getItem('Title')) {\n                deleteOthers = true;\n            } else {\n                  console.log(item);\n                console.log(localStorage.getItem('breadcumb-' + (breadcumbIndex )));\n                this.state.items.push({\n                    // @ts-ignore\n                    to: localStorage.getItem('breadcumb-' + breadcumbIndex),\n                    label: 'Connexion',\n                });\n                console.log(this.state.items);\n           // }\n             breadcumbIndex++;\n        }\n    }\n     if (0 !== breadcrums.length) {\n        console.log('nope');\n        for (let breadcrumb of breadcrums) {\n            console.log(localStorage.getItem('breadcrumb-' + breadcumbIndex))\n            console.log(this.map);\n            console.log('map map')\n            // @ts-ignore\n            console.log(this.map[localStorage.getItem('breadcrumb-' + breadcumbIndex)])\n            console.log('mop mpo')\n            this.state.items.push({\n                // @ts-ignore\n                to: localStorage.getItem('breadcrumb-' + breadcumbIndex),\n                // @ts-ignore\n                label: this.map[localStorage.getItem('breadcrumb-' + breadcumbIndex)],\n            });\n            breadcumbIndex++;\n        }\n         if (localStorage.getItem('breadcrumb-' + (breadcumbIndex - 1)) !== document.location.pathname) {\n            console.log('bread');\n            localStorage.setItem('breadcrumb-' + breadcumbIndex, document.location.pathname);\n        }\n        console.log(localStorage.getItem('breadcrumb-' + (breadcumbIndex - 1)));\n        console.log(document.location.pathname);\n        console.log(this.state.items);\n        console.log('breadcrumb-' + breadcumbIndex);\n        console.log(localStorage.getItem('breadcrumb-' + breadcumbIndex));\n        console.log(this.state.items);\n    } else {\n        console.log('ok');\n        localStorage.setItem('breadcrumb-' + breadcumbIndex, document.location.pathname);\n        this.state.items.push({\n            // @ts-ignore\n            to: localStorage.getItem('breadcrumb-' + breadcumbIndex),\n            label: 'Connexion',\n        });\n        console.log(this.state.items);\n        console.log('breadcrumb-' + breadcumbIndex);\n        console.log(localStorage.getItem('breadcrumb-' + breadcumbIndex));\n    }*/\n\n    /*\n                 <Breadcrumb itemsAfter={1} itemsBefore={1} max={4} separator={'/'}>\n                    {this.state.items.map(({to, label}: any) => {\n                        return (\n                            <div key={to}>\n                                <Link to={to}>{label}</Link>\n                            </div>\n                        )\n                    })}\n                </Breadcrumb>\n     */\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App container-fluid ml-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(PrivateRoute, {\n      path: '/lobby',\n      component: LobbyPage,\n      rest: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: '/course-sheet',\n      component: CourseSheetPage,\n      rest: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/connexion/login',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Connection, {\n      referrer: document.referrer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: '/connexion/register',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Inscription, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(PrivateRoute, {\n      path: '/admin',\n      component: Admin,\n      rest: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: '/creation',\n      component: LobbyCreation,\n      rest: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '/public',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(PublicLobbies, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(PrivateRoute, {\n      path: '/perso',\n      component: Personal,\n      rest: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: '*',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(NotFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/usr/src/app/client/src/View/App/App.tsx"],"names":["React","BrowserRouter","Router","Switch","Route","Nav","LobbyPage","Connection","NotFound","PrivateRoute","Home","Admin","PublicLobbies","CourseSheetPage","Personal","LobbyCreation","Inscription","App","Component","constructor","props","map","state","items","componentWillMount","render","document","referrer"],"mappings":"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","sourcesContent":["import React, {ReactNode} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route, Link,\n} from 'react-router-dom';\nimport Nav from '../Navigation/Nav';\nimport LobbyPage from '../Lobby/LobbyPage';\nimport Connection from '../Connection/Connection';\nimport NotFound from '../Pages/NotFound';\nimport PrivateRoute from '../../Security/PrivateRoute';\nimport '../../css/App.css';\nimport Home from '../Pages/Home';\nimport Admin from '../Admin/Admin';\nimport PublicLobbies from '../Public/PublicLobbies';\nimport CourseSheetPage from '../CourseSheet/CourseSheetPage';\nimport Personal from '../Pages/Personal';\nimport LobbyCreation from '../Lobby/LobbyCreation';\nimport Inscription from '../Connection/Inscription';\nimport Breadcrumb from \"../Navigation/Breadcrumb\";\n\ninterface AppState {\n    items: any[],\n}\n\nclass App extends React.Component<any, AppState> {\n\n    private map: any;\n    public constructor(props: any) {\n        super(props);\n        this.state = {\n            items: [\n            ]\n        };\n        this.map = {\n            '/lobby': 'Lobby',\n            '/perso': 'Perso',\n            '/admin': 'Admin',\n            '/connexion/register': 'Inscription',\n            '/connexion/connexion': 'Connexion',\n            '/': 'Accueil',\n        };\n    }\n\n    public componentWillMount(): void {\n        /*\n        // Breadcumbs logic\n        // let firstBre =\n        let breadcumbIndex = 0;\n        let breadcrums: any = [];\n        for (let item in localStorage) {\n            if ('breadcrumb-' === item.substr(0, 11)) {\n                breadcrums.push({key: item, value: localStorage.getItem(item)});\n\n            }\n            if ('breadcrumb-' + breadcumbIndex === item) {\n\n                if (deleteOthers) {\n                    localStorage.removeItem('breadcumb-' + breadcumbIndex);\n                } else if (localStorage.getItem('breadcumb-' + (breadcumbIndex - 1)) === document.location.pathname + localStorage.getItem('Title')) {\n                    deleteOthers = true;\n                } else {\n\n\n                    console.log(item);\n                    console.log(localStorage.getItem('breadcumb-' + (breadcumbIndex )));\n                    this.state.items.push({\n                        // @ts-ignore\n                        to: localStorage.getItem('breadcumb-' + breadcumbIndex),\n                        label: 'Connexion',\n                    });\n                    console.log(this.state.items);\n               // }\n\n                breadcumbIndex++;\n            }\n        }\n\n        if (0 !== breadcrums.length) {\n            console.log('nope');\n            for (let breadcrumb of breadcrums) {\n                console.log(localStorage.getItem('breadcrumb-' + breadcumbIndex))\n                console.log(this.map);\n                console.log('map map')\n                // @ts-ignore\n                console.log(this.map[localStorage.getItem('breadcrumb-' + breadcumbIndex)])\n                console.log('mop mpo')\n                this.state.items.push({\n                    // @ts-ignore\n                    to: localStorage.getItem('breadcrumb-' + breadcumbIndex),\n                    // @ts-ignore\n                    label: this.map[localStorage.getItem('breadcrumb-' + breadcumbIndex)],\n                });\n                breadcumbIndex++;\n            }\n\n            if (localStorage.getItem('breadcrumb-' + (breadcumbIndex - 1)) !== document.location.pathname) {\n                console.log('bread');\n                localStorage.setItem('breadcrumb-' + breadcumbIndex, document.location.pathname);\n            }\n            console.log(localStorage.getItem('breadcrumb-' + (breadcumbIndex - 1)));\n            console.log(document.location.pathname);\n            console.log(this.state.items);\n            console.log('breadcrumb-' + breadcumbIndex);\n            console.log(localStorage.getItem('breadcrumb-' + breadcumbIndex));\n            console.log(this.state.items);\n        } else {\n            console.log('ok');\n            localStorage.setItem('breadcrumb-' + breadcumbIndex, document.location.pathname);\n            this.state.items.push({\n                // @ts-ignore\n                to: localStorage.getItem('breadcrumb-' + breadcumbIndex),\n                label: 'Connexion',\n            });\n            console.log(this.state.items);\n            console.log('breadcrumb-' + breadcumbIndex);\n            console.log(localStorage.getItem('breadcrumb-' + breadcumbIndex));\n        }*/\n        /*\n\n                    <Breadcrumb itemsAfter={1} itemsBefore={1} max={4} separator={'/'}>\n                        {this.state.items.map(({to, label}: any) => {\n                            return (\n                                <div key={to}>\n                                    <Link to={to}>{label}</Link>\n                                </div>\n                            )\n                        })}\n                    </Breadcrumb>\n         */\n    }\n\n    public render(): ReactNode {\n        return (\n            <div className=\"App container-fluid ml-lg-4\">\n                <Nav/>\n                <Router>\n                    <Switch>\n                        <Route exact path={'/'}>\n                            <Home/>\n                        </Route>\n                        <PrivateRoute path={'/lobby'} component={LobbyPage} rest={[]}/>\n                        <PrivateRoute path={'/course-sheet'} component={CourseSheetPage} rest={[]}/>\n                        <Route path={'/connexion/login'}>\n                            <Connection referrer={document.referrer}/>\n                        </Route>\n                        <Route path={'/connexion/register'}>\n                            <Inscription/>\n                        </Route>\n                        <PrivateRoute path={'/admin'} component={Admin} rest={[]}/>\n                        <PrivateRoute path={'/creation'} component={LobbyCreation} rest={[]}/>\n                        <Route path={'/public'}>\n                            <PublicLobbies/>\n                        </Route>\n                        <PrivateRoute path={'/perso'} component={Personal} rest={[]}/>\n                        <Route path={'*'}>\n                            <NotFound/>\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}