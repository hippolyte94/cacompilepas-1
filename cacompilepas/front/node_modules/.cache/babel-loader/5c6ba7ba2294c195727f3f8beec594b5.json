{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/client/src/View/Connection/Inscription.tsx\";\nimport React from 'react';\nimport swal from 'sweetalert';\nimport passwordValidator from 'password-validator';\nimport Request from '../../API/Request';\nimport DropBox from '../General/Inputs/DropBox';\nimport Input from \"../General/Inputs/Input\";\nimport SubmitButton from \"../General/Inputs/SubmitButton\";\nimport Header from \"../General/Header\";\n\nclass Inscription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      firstName: '',\n      lastName: '',\n      pseudo: '',\n      validPassword: false,\n      formWasSubmitted: false,\n      icon: null\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n    this.handleLastNameChange = this.handleLastNameChange.bind(this);\n    this.handlePseudoChange = this.handlePseudoChange.bind(this);\n    this.handlePasswordConfirmationChange = this.handlePasswordConfirmationChange.bind(this);\n    this.handleIconChange = this.handleIconChange.bind(this);\n    this.handleIconDrop = this.handleIconDrop.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.redirectToConnection = this.redirectToConnection.bind(this);\n    this.setState = this.setState.bind(this);\n  }\n\n  handleEmailChange(event) {\n    // @ts-ignore\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    }, this.checkForm);\n  }\n\n  handlePasswordConfirmationChange(event) {\n    this.setState({\n      passwordConfirmation: event.target.value\n    }, this.checkForm);\n  }\n\n  handleFirstNameChange(event) {\n    this.setState({\n      firstName: event.target.value\n    });\n  }\n\n  handleLastNameChange(event) {\n    this.setState({\n      lastName: event.target.value\n    });\n  }\n\n  handlePseudoChange(event) {\n    this.setState({\n      pseudo: event.target.value\n    });\n  }\n\n  passwordVerification() {\n    const schema = new passwordValidator();\n    schema.is().min(8).is().max(100).has().uppercase().has().lowercase().has().digits().has().symbols().has().not().spaces();\n    return schema.validate(this.state.passwordConfirmation) && this.state.password === this.state.passwordConfirmation;\n  }\n\n  checkForm() {\n    return this.passwordVerification() && this.state.firstName !== '' && this.state.lastName !== '' && this.state.pseudo !== '' && this.state.email !== '' && this.state.password !== this.state.email && this.state.password !== this.state.firstName && this.state.password !== this.state.lastName && this.state.password !== this.state.pseudo;\n  }\n\n  redirectToConnection(payload) {\n    if (payload['success']) {\n      localStorage.setItem('token', '');\n      swal({\n        title: 'Bravo !',\n        text: 'Tu es des nôtres à présent, connecte-toi vite pour' + ' découvrir toutes les possibilités du site !!!',\n        buttons: [false],\n        icon: 'success',\n        timer: 5000 // @ts-ignore\n\n      }).then(() => window.location = '/connexion/login');\n    } else {\n      this.setState({\n        formWasSubmitted: true\n      });\n    }\n  }\n\n  submitForm(event) {\n    event.preventDefault();\n\n    if (this.checkForm()) {\n      let formData = new FormData();\n      formData.append('first_name', this.state.firstName);\n      formData.append('last_name', this.state.lastName);\n      formData.append('pseudo', '' + this.state.pseudo);\n      formData.append('email', '' + this.state.email);\n      formData.append('password', '' + this.state.password);\n      formData.append('confirm_password', '' + this.state.passwordConfirmation);\n\n      if (null !== this.state.icon) {\n        // @ts-ignore\n        formData.append('file', this.state.icon);\n        new Request('/connection/register', this.redirectToConnection, 'POST', formData, // @ts-ignore\n        this.state.icon.type);\n      } else {\n        new Request('/connection/register', this.redirectToConnection, 'POST', formData, 'jpg');\n      }\n    } else {\n      this.setState({\n        formWasSubmitted: true\n      });\n      swal({\n        title: 'Formulaire incorrect',\n        text: 'Vérifie que ton mot de passe :\\n' + '   - Fait au moins 8 caractères\\n' + '   - Comporte des majuscules et des minuscules\\n' + '   - Contient chiffres et des caractères spéciaux\\n' + '   - Ne contient pas d\\'espaces\\n' + '   - N\\'est pas ton pseudo, ton nom, ton prénom ou ton adresse email',\n        icon: 'error'\n      });\n    }\n  }\n\n  handleIconChange(event) {\n    event.preventDefault(); // @ts-ignore\n\n    this.setState({\n      icon: event.target.files[0]\n    });\n  }\n\n  handleIconDrop(event) {\n    event.preventDefault();\n    this.setState({\n      icon: event.dataTransfer.files[0]\n    });\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: 'content row inscription-bloc',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'container col-12 col-lg-6 col-md-8 col-sm-10',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Header, {\n      h1: 'Inscris-toi ici',\n      p: 'Pour accéder à notre super site de fiches de cours !',\n      containerClassName: 'ml-0 ml-lg-2 ml-md-2 ml-sm-2 mb-5',\n      contentClassName: 'pl-0',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      id: 'register-form',\n      onSubmit: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'row mt-5',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Input, {\n      id: 'input-first-name',\n      inputType: 'text',\n      placeholder: 'Prénom',\n      formGroupClassName: 'col-4',\n      className: 'connection-input',\n      onChange: this.handleFirstNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: 'input-last-name',\n      inputType: 'text',\n      placeholder: 'Nom',\n      formGroupClassName: 'col-4',\n      className: 'connection-input',\n      onChange: this.handleLastNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: 'input-pseudo',\n      inputType: 'text',\n      placeholder: 'Pseudo',\n      formGroupClassName: 'col-4',\n      className: 'connection-input',\n      onChange: this.handlePseudoChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(DropBox, {\n      id: 'input-icon',\n      className: 'col-12',\n      labelNotDragged: 'Glisse ta photo profil ici !',\n      labelDragged: 'Photo déposée',\n      accept: 'image/*',\n      backgroundClassName: 'mt-5',\n      handleFileDrop: this.handleIconDrop,\n      handleFileChange: this.handleIconChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: 'input-email',\n      inputType: 'email',\n      placeholder: 'Adresse email',\n      formGroupClassName: 'col-12 mt-4 pt-3',\n      className: 'connection-input',\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(Input, {\n      id: 'input-password',\n      inputType: 'password',\n      placeholder: 'Mot de passe',\n      formGroupClassName: 'col-12 mt-5',\n      className: 'connection-input',\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-12 mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Utilise au moins huit caract\\xE8res avec des majuscules, des minuscules, des chiffres et des symboles\"), React.createElement(Input, {\n      id: 'input-password-confirmation',\n      inputType: 'password',\n      placeholder: 'Confirmation mot de passe',\n      formGroupClassName: 'col-12 mt-5',\n      className: 'connection-input',\n      onChange: this.handlePasswordConfirmationChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'col-12 mt-5',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(SubmitButton, {\n      text: 'Inscris-toi !',\n      onClick: this.submitForm,\n      className: 'connection-button',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: 'row mt-2',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: 'col-12 pl-3',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: 'text-center',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"D\\xE9j\\xE0 inscrit ?\", React.createElement(\"a\", {\n      id: 'redirect-button',\n      className: 'h4 pl-3',\n      href: '/connexion/login',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Connecte-toi !\"))))))));\n  }\n\n}\n\nexport default Inscription;","map":{"version":3,"sources":["/usr/src/app/client/src/View/Connection/Inscription.tsx"],"names":["React","swal","passwordValidator","Request","DropBox","Input","SubmitButton","Header","Inscription","Component","constructor","props","state","email","password","passwordConfirmation","firstName","lastName","pseudo","validPassword","formWasSubmitted","icon","handleEmailChange","bind","handlePasswordChange","handleFirstNameChange","handleLastNameChange","handlePseudoChange","handlePasswordConfirmationChange","handleIconChange","handleIconDrop","submitForm","redirectToConnection","setState","event","target","value","checkForm","passwordVerification","schema","is","min","max","has","uppercase","lowercase","digits","symbols","not","spaces","validate","payload","localStorage","setItem","title","text","buttons","timer","then","window","location","preventDefault","formData","FormData","append","type","files","dataTransfer","render"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, FormEvent, ReactNode} from 'react';\nimport swal from 'sweetalert';\nimport passwordValidator from 'password-validator';\nimport Request from '../../API/Request';\nimport DropBox from '../General/Inputs/DropBox';\nimport Input from \"../General/Inputs/Input\";\nimport SubmitButton from \"../General/Inputs/SubmitButton\";\nimport Header from \"../General/Header\";\n\ninterface InscriptionState {\n    email: string,\n    password: string,\n    passwordConfirmation: string,\n    firstName: string,\n    lastName: string,\n    pseudo: string,\n    validPassword: boolean,\n    formWasSubmitted: boolean,\n    icon: File | null,\n}\n\nclass Inscription extends React.Component<any, InscriptionState> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            passwordConfirmation: '',\n            firstName: '',\n            lastName: '',\n            pseudo: '',\n            validPassword: false,\n            formWasSubmitted: false,\n            icon: null\n        }\n\n        this.handleEmailChange = this.handleEmailChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleFirstNameChange = this.handleFirstNameChange.bind(this);\n        this.handleLastNameChange = this.handleLastNameChange.bind(this);\n        this.handlePseudoChange = this.handlePseudoChange.bind(this);\n        this.handlePasswordConfirmationChange = this.handlePasswordConfirmationChange.bind(this);\n        this.handleIconChange = this.handleIconChange.bind(this);\n        this.handleIconDrop = this.handleIconDrop.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n        this.redirectToConnection = this.redirectToConnection.bind(this);\n        this.setState = this.setState.bind(this);\n    }\n\n    public handleEmailChange(event: ChangeEvent<HTMLInputElement>): void {\n        // @ts-ignore\n        this.setState({email: event.target.value});\n    }\n\n    public handlePasswordChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({password: event.target.value}, this.checkForm);\n    }\n\n    public handlePasswordConfirmationChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({passwordConfirmation: event.target.value}, this.checkForm);\n    }\n\n    public handleFirstNameChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({firstName: event.target.value});\n    }\n\n    public handleLastNameChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({lastName: event.target.value});\n    }\n\n    public handlePseudoChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({pseudo: event.target.value});\n    }\n\n    public passwordVerification(): boolean {\n        const schema = new passwordValidator();\n        schema\n            .is().min(8)\n            .is().max(100)\n            .has().uppercase()\n            .has().lowercase()\n            .has().digits()\n            .has().symbols()\n            .has().not().spaces();\n        return schema.validate(this.state.passwordConfirmation) && this.state.password === this.state.passwordConfirmation;\n    }\n\n    public checkForm(): boolean {\n        return this.passwordVerification()\n            && this.state.firstName !== ''\n            && this.state.lastName !== ''\n            && this.state.pseudo !== ''\n            && this.state.email !== ''\n            && this.state.password !== this.state.email\n            && this.state.password !== this.state.firstName\n            && this.state.password !== this.state.lastName\n            && this.state.password !== this.state.pseudo;\n    }\n\n    public redirectToConnection(payload: any): void {\n        if (payload['success']) {\n            localStorage.setItem('token', '');\n            swal({\n                title: 'Bravo !',\n                text: 'Tu es des nôtres à présent, connecte-toi vite pour' +\n                    ' découvrir toutes les possibilités du site !!!',\n                buttons: [false],\n                icon: 'success',\n                timer: 5000,\n                // @ts-ignore\n            }).then(() => window.location = '/connexion/login');\n        } else {\n            this.setState({formWasSubmitted: true});\n        }\n    }\n\n    public submitForm(event: FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\n        event.preventDefault();\n\n        if (this.checkForm()) {\n            let formData = new FormData();\n            formData.append('first_name', this.state.firstName);\n            formData.append('last_name', this.state.lastName);\n            formData.append('pseudo', '' + this.state.pseudo);\n            formData.append('email', '' + this.state.email);\n            formData.append('password', '' + this.state.password);\n            formData.append('confirm_password', '' + this.state.passwordConfirmation);\n            if (null !== this.state.icon) {\n                // @ts-ignore\n                formData.append('file', this.state.icon);\n\n                new Request(\n                    '/connection/register',\n                    this.redirectToConnection,\n                    'POST',\n                    formData,\n                    // @ts-ignore\n                    this.state.icon.type,\n                );\n            } else {\n                new Request(\n                    '/connection/register',\n                    this.redirectToConnection,\n                    'POST',\n                    formData,\n                    'jpg',\n                );\n            }\n        } else {\n            this.setState({formWasSubmitted: true});\n            swal({\n                title: 'Formulaire incorrect',\n                text: 'Vérifie que ton mot de passe :\\n' +\n                    '   - Fait au moins 8 caractères\\n' +\n                    '   - Comporte des majuscules et des minuscules\\n' +\n                    '   - Contient chiffres et des caractères spéciaux\\n' +\n                    '   - Ne contient pas d\\'espaces\\n' +\n                    '   - N\\'est pas ton pseudo, ton nom, ton prénom ou ton adresse email',\n                icon: 'error'\n            });\n        }\n    }\n\n    public handleIconChange(event: ChangeEvent<HTMLInputElement> | React.DragEvent<HTMLDivElement>): void {\n        event.preventDefault();\n        // @ts-ignore\n        this.setState({icon: event.target.files[0]});\n    }\n\n    public handleIconDrop(event: React.DragEvent<HTMLDivElement>): void {\n        event.preventDefault();\n        this.setState({icon: event.dataTransfer.files[0]});\n    }\n\n    render(): ReactNode {\n        return (\n            <section className={'content row inscription-bloc'}>\n                <div className={'container col-12 col-lg-6 col-md-8 col-sm-10'}>\n                    <div>\n                        <Header\n                            h1={'Inscris-toi ici'}\n                            p={'Pour accéder à notre super site de fiches de cours !'}\n                            containerClassName={'ml-0 ml-lg-2 ml-md-2 ml-sm-2 mb-5'}\n                            contentClassName={'pl-0'}\n                        />\n                        <form id={'register-form'} onSubmit={this.submitForm}>\n                            <div className={'row mt-5'}>\n                                <Input id={'input-first-name'} inputType={'text'} placeholder={'Prénom'}\n                                       formGroupClassName={'col-4'}\n                                       className={'connection-input'}\n                                       onChange={this.handleFirstNameChange}/>\n                                <Input id={'input-last-name'} inputType={'text'} placeholder={'Nom'}\n                                       formGroupClassName={'col-4'}\n                                       className={'connection-input'}\n                                       onChange={this.handleLastNameChange}/>\n                                <Input id={'input-pseudo'} inputType={'text'} placeholder={'Pseudo'}\n                                       formGroupClassName={'col-4'}\n                                       className={'connection-input'}\n                                       onChange={this.handlePseudoChange}/>\n                                <DropBox\n                                    id={'input-icon'}\n                                    className={'col-12'}\n                                    labelNotDragged={'Glisse ta photo profil ici !'}\n                                    labelDragged={'Photo déposée'}\n                                    accept={'image/*'}\n                                    backgroundClassName={'mt-5'}\n                                    handleFileDrop={this.handleIconDrop}\n                                    handleFileChange={this.handleIconChange}\n                                />\n                                <Input id={'input-email'} inputType={'email'} placeholder={'Adresse email'}\n                                       formGroupClassName={'col-12 mt-4 pt-3'}\n                                       className={'connection-input'}onChange={this.handleEmailChange}/>\n                                <Input id={'input-password'} inputType={'password'}\n                                       placeholder={'Mot de passe'}\n                                       formGroupClassName={'col-12 mt-5'}\n                                       className={'connection-input'}onChange={this.handlePasswordChange}/>\n\n                                       <div className={\"col-12 mt-1\"}>Utilise au moins huit caractères avec des majuscules, des minuscules, des chiffres et des symboles</div>\n\n                                <Input id={'input-password-confirmation'} inputType={'password'}\n                                       placeholder={'Confirmation mot de passe'}\n                                       formGroupClassName={'col-12 mt-5'}\n                                       className={'connection-input'}\n                                       onChange={this.handlePasswordConfirmationChange}/>\n                                <div className={'col-12 mt-5'}>\n                                    <SubmitButton\n                                        text={'Inscris-toi !'}\n                                        onClick={this.submitForm}\n                                        className={'connection-button'}\n                                    />\n                                </div>\n                            </div>\n                        </form>\n                        <div className={'row mt-2'}>\n                            <div className={'col-12 pl-3'}>\n                                <p className={'text-center'}>\n                                    Déjà inscrit ?\n                                    <a\n                                        id={'redirect-button'}\n                                        className={'h4 pl-3'}\n                                        href={'/connexion/login'}\n                                    >\n                                        <u>\n                                            Connecte-toi !\n                                        </u>\n                                    </a>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Inscription;\n"]},"metadata":{},"sourceType":"module"}